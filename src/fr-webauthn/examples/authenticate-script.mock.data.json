{
  "authId": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW5kZXhWYWx1ZSI6IldlYkF1dGhuTG9naW4iLCJvdGsiOiJna3VqcmVicWJnMTV0c2ptbWNjNjc1ZGxhZyIsImF1dGhJbmRleFR5cGUiOiJzZXJ2aWNlIiwicmVhbG0iOiIvIiwic2Vzc2lvbklkIjoiKkFBSlRTUUFDTURJQUJIUjVjR1VBQ0VwWFZGOUJWVlJJQUFKVE1RQUNNREUuKmV5SjBlWEFpT2lKS1YxUWlMQ0pqZEhraU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuWlhsS01HVllRV2xQYVVwTFZqRlJhVXhEU214aWJVMXBUMmxLUWsxVVNUUlJNRXBFVEZWb1ZFMXFWVEpKYVhkcFdWZDRia2xxYjJsYVIyeDVTVzR3TGk1WGFYQnpPRkF3T1ZGRVJHaE9SR1EzU1U5WU5HaDNMbHBvVTA0NVYyMDJhbTlwU0dOZlVHTjFVa1J3VjJ0UWNWTnBhbkJsVEZKNFVsbFZaSGR1UW0xUFFsTXplRU40TTNKMFJYSmlOV2gwVUZoNllsRmlMVGxQVWpBMlduQkNUalpITlRaZmEyOURObEJYWm5nMGQzUllZMEp6ZVhWU2EyZHJjRTlIYmtSMWVtWTFZMDFsZGtKRE9Vd3piMmROTVVWcWRXZEpkMVJ5T0VGVVoyeEZjVE5QT0Vwb1VIRkVSSGcyVDI5RVIxZ3pOVU5YTTFWd2VtUlRWbTkxTFRKNlIzUkhTR0ZHY2taSlkyNXdhVVJOYjFOSmJrOHhOQzFyZW05WVEwWm9iUzFYZVZNeGVGZEpObE5rU1Y5S1NuVTJUWGhpTTBacVZVNUpaR1JZVW5nd2FWa3RhbFpuVGt3MVN6TjFSblZKTVhWa1VYbG5hUzExUVhacmIyNURXbFJrVVZKWldXcHpNVnBNT0Y4NE1rZ3pVM1ZRVm1Wbk0zQm9iRUZNWW5STVMyTnhWMm8xU20xUmNFUnFiMVJoUkhWUVRYSkZjbHBUZVVaZk9GZ3dkMmhrT1VabWMwazJZMmQ0VnpsdGVIZDBValJwTjNNNU5VSlRNM2hTTXpWUk9UQkJTRU4yY1VSdlNrWmFhRU5HYlZSUFkxRllVRlpYVVc0NWNHOTJYMVZIUW10NVlYTXdWbmd3VmtOVGRtSXhRbDkxV2tvelNVTkRYM1YwT1d0S1JrTlpRM3BCVEVsRmFqWkhhVkZpYWkxUGNqTnBSR1prTVUxa2FIQjFlRWcwUm5kM2IwVnBVa1JrVVdaV1VEbDNTSFpYYXpCaFJXaGpTRkppUjBGUGNWWkdOakZQUVRkTGNYRllTVXBrUlRjelFrSm5TbEptZDJGd1NqUnBVazQwY2xVMWVqUlBUbkp3UW5OSFpUUnBSeTF2Y1doNlkyeHFPVXBVVG5oMmJXMVhSeTFWTW10Qk1XeGxaamxPZGpSeldYWXplVVE0ZWxWZlpXVjBYMFkzUjNaSmRVY3haR2w2WkhscmJWRk1Na2hsWVVsSFVrdDNXbXgzT0Raak1WY3RibEpxYVMxQmFWWlhWbm94Y205dFgwRlBUM2N4VlV4S1lsTTBiR1ZSVTJSclFrZHZPVFl0WlhsM2RrWjJWREY2YVVodlZUSm5TeTFOZWtkWVJHMXRWazE0UTNWTmRrNUVSMVl4VTFSNWFXcFhSVVppYWxnNFRYUTFOa0ZtZURaQmJFaG5abkZYUkZRdFVIcEhiSFpvT0VSdmVVMVlXRUpLUlZrNVJWRjNlVEZsTkVoSlNXTkpTRFJzUWtKbmNXRk9UMVoyZFhCTGExcFBlR0phZVVjNFRETnZaakI0ZVZKcWRHaHZTbFE0WTFkbVVHMTRaR1ZpYnpNM0xXeHBlbE41WkZwa05qZHhiVTUzVG1reGJFVjNlbmRrT0daSldVUkxZMWxaWVVRdWNFMTBWVmRSZFhaSlZuQmhSMDlNY0VWWllUVmlRUS5ianNYNkZ3OWZ2X1FRSUtUYVI4QmZqeWY4bXZMdEMtaXVxNW5JMVhmb3M0IiwiZXhwIjoxNTkwOTUwMDYzLCJpYXQiOjE1OTA5NDk3NjN9.1HJj84LUgxhGLUJeJEuISTUTecJySP9ZcJWbSmB8t6s",
  "callbacks": [
    {
      "type": "TextOutputCallback",
      "output": [
        {
          "name": "message",
          "value": "/*\n * Copyright 2018-2020 ForgeRock AS. All Rights Reserved\n *\n * Use of this code requires a commercial software license with ForgeRock AS.\n * or with one of its affiliates. All use shall be exclusively subject\n * to such license between the licensee and ForgeRock AS.\n */\n\nif (!window.PublicKeyCredential) {\n    document.getElementById('webAuthnOutcome').value = \"unsupported\";\n    document.getElementById(\"loginButton_0\").click();\n}\n\nvar options = {\n    \n    challenge: new Int8Array([-2, 85, 78, -80, -124, -6, -118, 15, 77, -30, -76, -27, -43, -19, -51, -68, 60, -80, -64, -102, 73, -103, 76, -77, -96, -28, 5, -23, -59, -36, 1, -1]).buffer,\n    timeout: 60000,\n    allowCredentials: [{ \"type\": \"public-key\", \"id\": new Int8Array([-107, 93, 68, -67, -5, 107, 18, 16, -25, -30, 80, 103, -75, -53, -2, -95, 102, 42, 47, 126, -1, 85, 93, 45, -85, 8, -108, 107, 47, -25, 66, 12, -96, 81, 104, -127, 26, -59, -69, -23, 75, 89, 58, 124, -93, 4, 28, -128, 121, 35, 39, 103, -86, -86, 123, -67, -7, -4, 79, -49, 127, -19, 7, 4]).buffer }]\n};\n\nnavigator.credentials.get({ \"publicKey\" : options })\n    .then(function (assertion) {\n        var clientData = String.fromCharCode.apply(null, new Uint8Array(assertion.response.clientDataJSON));\n        var authenticatorData = new Int8Array(assertion.response.authenticatorData).toString();\n        var signature = new Int8Array(assertion.response.signature).toString();\n        var rawId = assertion.id;\n        var userHandle = String.fromCharCode.apply(null, new Uint8Array(assertion.response.userHandle));\n        document.getElementById('webAuthnOutcome').value = clientData + \"::\" + authenticatorData + \"::\" + signature + \"::\" + rawId + \"::\" + userHandle;\n        document.getElementById(\"loginButton_0\").click();\n    }).catch(function (err) {\n        document.getElementById('webAuthnOutcome').value = \"ERROR\" + \"::\" + err;\n        document.getElementById(\"loginButton_0\").click();\n    });\n"
        },
        { "name": "messageType", "value": "4" }
      ]
    },
    {
      "type": "TextOutputCallback",
      "output": [
        {
          "name": "message",
          "value": "/*\n * Copyright 2018 ForgeRock AS. All Rights Reserved\n *\n * Use of this code requires a commercial software license with ForgeRock AS.\n * or with one of its affiliates. All use shall be exclusively subject\n * to such license between the licensee and ForgeRock AS.\n *\n */\n\n/*\n * Note:\n *\n * When a ConfirmationCallback is used (e.g. during recovery code use), the XUI does not render a loginButton. However\n * the webAuthn script needs to call loginButton.click() to execute the appropriate data reformatting prior to sending\n * the request into AM. Here we query whether the loginButton exists and add it to the DOM if it doesn't.\n */\n\nvar newLocation = document.getElementById(\"wrapper\");\n\nvar script = \"<div class=\\\"form-group\\\">\\n\" +\n    \"<div class=\\\"panel panel-default\\\">\\n\" +\n    \"    <div class=\\\"panel-body text-center\\\">\\n\" +\n    \"    <h4 class=\\\"awaiting-response\\\"><i class=\\\"fa fa-circle-o-notch fa-spin text-primary\\\"></i> Waiting for local device... </h4>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\";\n\nif (!document.getElementById(\"loginButton_0\")) {\n    script += \"<input id=\\\"loginButton_0\\\" role=\\\"button\\\" type=\\\"submit\\\" hidden>\";\n} else {\n    document.getElementById(\"loginButton_0\").style.visibility='hidden';\n}\n\nscript += \"</div>\";\n\nnewLocation.getElementsByTagName(\"fieldset\")[0].innerHTML += script;\ndocument.body.appendChild(newLocation);"
        },
        { "name": "messageType", "value": "4" }
      ]
    },
    {
      "type": "HiddenValueCallback",
      "output": [
        { "name": "value", "value": "false" },
        { "name": "id", "value": "webAuthnOutcome" }
      ],
      "input": [{ "name": "IDToken3", "value": "webAuthnOutcome" }]
    }
  ]
}
