name: Nx Distributed Tasks
on:
  pull_request:
    branches:
      - develop

jobs:
  install-deps-mac:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1 # Skip downloading during yarn install
          PLAYWRIGHT_BROWSERS_PATH: 0 # Places binaries to node_modules/@playwright/test
  distributed-task-mac:
    runs-on: macos-latest
    needs: install-deps-mac
    strategy:
      matrix:
        target:
          [
            '"test --configuration=unit"',
            'lint',
            'build',
            '"test --configuration=integration"',
            'e2e',
          ]
        jobIndex: [1, 2, 3, 4]
    env:
      jobCount: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup custom host for sdkapp.example.com
        run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com user.example.com" | sudo tee -a /etc/hosts
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
            cache-nx-${{ hashFiles('package-lock.json') }}-
      - run: git fetch --no-tags --prune --depth=5 origin develop
      - name: Install Playwright
        run: npx playwright install
      - name: nx run-many:${{ matrix.target }}
        run: node ./tools/scripts/run-many.js ${{ matrix.target }} ${{ matrix.jobIndex }} ${{ env.jobCount }} ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

  install-deps-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1 # Skip downloading during yarn install
          PLAYWRIGHT_BROWSERS_PATH: 0 # Places binaries to node_modules/@playwright/test
      - name: Install Playwright
        run: npx playwright install
  distributed-task-linux:
    runs-on: ubuntu-latest
    needs: install-deps-linux
    strategy:
      matrix:
        target:
          [
            '"test --configuration=unit"',
            'lint',
            'build',
            '"test --configuration=integration"',
            'e2e',
          ]
        jobIndex: [1, 2, 3, 4]
    env:
      jobCount: 1
      PLAYWRIGHT_BROWSERS_PATH: /usr/lib/playwright
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup custom host for sdkapp.example.com
        run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com user.example.com" | sudo tee -a /etc/hosts
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
            cache-nx-${{ hashFiles('package-lock.json') }}-
      - run: git fetch --no-tags --prune --depth=5 origin develop
      - run: git show-ref
      - name: nx run-many:${{ matrix.target }}
        run: node ./tools/scripts/run-many.js ${{ matrix.target }} ${{ matrix.jobIndex }} ${{ env.jobCount }} ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

  install-deps-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}
      - name: npm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        # env:
        # DEBUG: pw:install
        # PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        # PLAYWRIGHT_BROWSERS_PATH: 0 # Places binaries to node_modules/@playwright/test
  distributed-task-windows:
    runs-on: windows-latest
    needs: install-deps-windows
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=5 origin develop

      - name: Setup custom host for sdkapp.example.com
        run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com user.example.com" >> C:\Windows\System32\drivers\etc\hosts #add to new line

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-${{ github.sha }}
          restore-keys: |
            cache-nx-${{ hashFiles('package-lock.json') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
            cache-nx-${{ hashFiles('package-lock.json') }}-

      - name: Playwright Install
        run: npx playwright install

      - name: nx run e2e
        shell: pwsh
        run: npx nx affected --target=e2e --parallel --max-parallel=4 --base=remotes/origin/develop
