name: Develop CI Pipeline
on:
  pull_request:
    branches:
      - develop
jobs:
  linux:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        os: [ubuntu-18.04]
        nodeversion: ['16']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        cache: npm
        node-version: ${{ matrix.nodeversion }}
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Setup custom host for sdkapp.example.com
      run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com" | sudo tee -a /etc/hosts
    - name: Install NPM
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm i -g npm@8
    - name: Install Dependencies
      run: npm ci
      env:
        DEBUG: pw:install
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    - name: Pull Recent Git History
      run: git fetch origin develop
    - name: Run Affected Unit Tests
      shell: bash
      run: npm run test:unit:ci
    - name: Run Affected Integration Tests
      run: npm run test:integration:ci
    - name: Build SDK
      run: npm run build:ci
      env: 
        NODE_ENV: production

    - name: Install Playwright
      run: npx playwright install --with-deps
    - name: Run e2e
      run: npm run test:e2e --project=${{ matrix.browser }}
      env:
        NODE_TLS_REJECT_UNAUTHORIZED: 0  
  osx:
      name: ${{ matrix.os }} (${{ matrix.browser }})
      strategy:
        fail-fast: false
        matrix:
          browser: [chromium, firefox, webkit]
          os: [macos-11.0]
          nodeversion: ['16']
      runs-on: ${{ matrix.os }}
      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.nodeversion }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}- 
      - name: Setup custom host for sdkapp.example.com
        run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com" | sudo tee -a /etc/hosts      
      - name: Install NPM
        run: npm i -g npm@8
      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          DEBUG: pw:install
      - name: Pull Recent Git History
        run: git fetch origin develop
      - name: Run Affected Unit Tests
        shell: bash
        run: npm run test:unit:ci
      - name: Run Affected Integration Tests
        run: npm run test:integration:ci
      - name: Build SDK
        run: npm run build:ci
        env: 
          NODE_ENV: production

      - name: Run E2E Tests
        run: npm run test:e2e
  windows:
    name: windows (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, msedge, firefox]
        nodeversion: ['16']
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.nodeversion }}
    - name: Setup custom host for sdkapp.example.com
      run: echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com" >> C:\Windows\System32\drivers\etc\hosts   #add to new line
    - name: debug etc hosts
      run: type C:\Windows\System32\drivers\etc\hosts
    - name: Install NPM
      run: npm i -g npm@8
    - name: Install Dependencies
      run: npm ci
      env:
        DEBUG: pw:install
    - name: Pull Recent Git History
      run: git fetch origin develop
    - name: Run Affected Unit Tests        
      shell: bash
      run: npm run test:unit:ci
    - name: Run Affected Integration Tests
      run: npm run test:integration:ci
    - name: Build SDK
      run: npm run build:ci
    - name: Run E2E Tests
      run: npm run test:e2e
