name: ForgeRock Ubuntu CI
on:
  push:
    branches:
      - develop
      - master
env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
jobs:
  merge:
    runs-on: ubuntu-latest # we run on ubuntu because some actions in this job do not work on mac
    steps:
      - name: Checkout Merged Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: cache
        with:
          node-version: '16.13.1'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: sha
        uses: nrwl/nx-set-shas@v2
      - run: npm install @nrwl/nx-cloud
      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx-cloud stop-all-agents
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: 'E2E Artifacts'
          retention-days: 5
          path: |
            ${{ github.workspace }}/e2e/**/test-results
            test-results
            ${{ github.workspace }}/test-results
  agents:
    runs-on: ubuntu-latest
    name: Agent Ubuntu
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: cache
        with:
          node-version: '16.13.1'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          # PLAYWRIGHT_BROWSERS_PATH: 0
          PLAYWRIGHT_SKIP_BROWSERS_DOWNLOAD: 1
      - run: npm install @nrwl/nx-cloud
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
  publish:
    if: ${{ github.ref == 'refs/heads/develop' }} # just so we only publish on develop for now (beta)
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.SSH_KEY }}
          # needs to be set so we can change token
          persist-credentials: false # Whether to configure the token or SSH key with the local git config
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Set git config username and email
        run: git config user.email "ryan.basmajian@forgerock.com" && git config user.name "ryanbas21"
        shell: bash
      - uses: actions/setup-node@v3
        id: cache
        with:
          node-version: '16.x'
          scope: '@forgerock'
      - run: npm ci
      - run: npm install @nrwl/nx-cloud
      - run: npm run build
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: sha
        uses: nrwl/nx-set-shas@v2
      - name: Version Beta
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected --target=version --configuration=beta --base=beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_NPM_TOKEN: ${{ secrets.GH_TOKEN }}
          PUBLIC_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Run Github Pushes
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx run javascript-sdk:github --configuration=beta
      - uses: actions/setup-node@v3
        if: ${{ github.ref == 'refs/heads/develop' }}
        with:
          registry-url: 'https://npm.pkg.github.com'
          scope: '@forgerock'
      - name: Release Beta GPR
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected --target=deploy --configuration=beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_NPM_TOKEN: ${{ secrets.GH_TOKEN }}
          PUBLIC_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
