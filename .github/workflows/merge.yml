name: ForgeRock Ubuntu CI
on:
  push:
    branches:
      - develop
      - master

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
jobs:
  merge:
    runs-on: ubuntu-latest # we run on ubuntu because some actions in this job do not work on mac
    steps:
      - uses: actions/checkout@v3
        name: Checkout Merged Branch
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        id: cache
        with:
          node-version: '16.13.1'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - uses: nrwl/last-successful-commit-action@v1
        with:
          id: last_successful_commit
          workflow_id: 'merge.yml' # name of file
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3 --base=${{ steps.last_successful_commit.outputs.commit_hash }}
      - run: npx nx affected --target=test --parallel --max-parallel=2 --coverage --base=${{ steps.last_successful_commit.outputs.commit_hash }}
      - run: npx nx affected --target=test --configuration=integration --parallel --coverage  --base=${{ steps.last_successful_commit.outputs.commit_hash }}
      - run: npx nx affected --target=e2e  --parallel --base=HEAD~1 --base=${{ steps.last_successful_commit.outputs.commit_hash }}

        # It's important that we always run this step, otherwise in the case of any failures in preceding non-Nx steps, the agents will keep running and waste billable minutes
      - name: Stop All Agents
        if: ${{ always() }}
        run: npx nx-cloud stop-all-agents

      - name: Run Whitesource Action
        uses: TheAxZim/Whitesource-Scan-Action@v1.0.0
        with:
          wssURL: https://saas.whitesourcesoftware.com/agent
          apiKey: ${{ secrets.WSS_API_KEY }}
          configFile: 'wss-unified-agent.config'
        env:
          WS_USERKEY: ${{ secrets.WS_USER_KEY }}
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODE_COV_UPLOAD_TOKEN }}
          directory: ${{ github.workspace }}/coverage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: 'E2E Artifacts'
          retention-days: 5
          path: |
            ${{ github.workspace }}/e2e/**/test-results
            test-results
            ${{ github.workspace }}/test-results
  agents:
    runs-on: ubuntu-latest
    name: Agent Ubuntu
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.1'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          # PLAYWRIGHT_BROWSERS_PATH: 0
          PLAYWRIGHT_SKIP_BROWSERS_DOWNLOAD: 1

      - name: Setup custom host for sdkapp.example.com
        run: sudo echo "127.0.0.1 sdkapp.example.com auth.example.com api.example.com user.example.com" | sudo tee -a /etc/hosts

      - run: npx playwright install chromium firefox webkit
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
  publish:
    if: ${{ github.ref == 'refs/heads/develop' }} # just so we only publish on develop for now (beta)
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          scope: '@forgerock'
      - run: npm ci
      - run: npm run build
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_NPM_TOKEN: ${{ secrets.GH_TOKEN }}
          PUBLIC_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_NPM_CONFIG_REGISTRY: https://npm.pkg.github.com/
          PUBLIC_NPM_CONFIG_REGISTRY: https://registry.npmjs.org
        run: npx multi-semantic-release -ignore-private-packages
